---
# Configuration tasks for Fluent Bit

- name: Create Fluent Bit configuration directory
  ansible.builtin.file:
    path: /etc/fluent-bit/conf.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add stock parser file for Fluent Bit
  ansible.builtin.copy:
    src: parsers.yaml
    dest: /etc/fluent-bit/conf.d/20_parsers.yaml
    owner: root
    group: root
    mode: '0644'

- name: Create systemd override directory for fluent-bit
  ansible.builtin.file:
    path: /etc/systemd/system/fluent-bit.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create systemd override to use YAML config
  ansible.builtin.template:
    src: fluent-bit.service.override.j2
    dest: /etc/systemd/system/fluent-bit.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  register: __fluentbit_service_override
  notify:
    - Restart fluent-bit

- name: Reload systemd daemon if needed
  ansible.builtin.systemd:
    daemon_reload: true
  when: __fluentbit_service_override.changed
  ignore_errors: "{{ ansible_virtualization_type == 'podman' or ansible_virtualization_type == 'docker' }}"

- name: Generate Fluent Bit main configuration
  ansible.builtin.template:
    src: fluent-bit.yaml.j2
    dest: /etc/fluent-bit/fluent-bit.yaml
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart fluent-bit

- name: Remove old-style configurations
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  notify: Restart fluent-bit
  loop:
    - /etc/fluent-bit/fluent-bit.conf
    - /etc/fluent-bit/parsers.conf
    - /etc/fluent-bit/plugins.conf

- name: Start and enable Fluent Bit service
  ansible.builtin.systemd:
    name: fluent-bit
    state: started
    enabled: true
  ignore_errors: "{{ ansible_virtualization_type == 'podman' or ansible_virtualization_type == 'docker' }}"
