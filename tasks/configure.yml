---
# Configuration tasks for Fluent Bit

- name: Create Fluent Bit configuration directory
  ansible.builtin.file:
    path: /etc/fluent-bit/conf.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Add stock parser file for Fluent Bit
  ansible.builtin.copy:
    src: parsers.yaml
    dest: /etc/fluent-bit/conf.d/20-parsers.yaml
    owner: root
    group: root
    mode: '0644'

- name: Create systemd override directory for fluent-bit
  ansible.builtin.file:
    path: /etc/systemd/system/fluent-bit.service.d
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Create systemd override to use YAML config
  ansible.builtin.template:
    src: fluent-bit.service.override.j2
    dest: /etc/systemd/system/fluent-bit.service.d/override.conf
    owner: root
    group: root
    mode: '0644'
  register: __fluentbit_service_override
  notify:
    - Restart fluent-bit

- name: Reload systemd daemon if needed
  ansible.builtin.systemd:
    daemon_reload: true
  when: __fluentbit_service_override.changed
  ignore_errors: "{{ ansible_virtualization_type == 'podman' or ansible_virtualization_type == 'docker' }}"

- name: Generate Fluent Bit main configuration
  ansible.builtin.template:
    src: fluent-bit.yaml.j2
    dest: /etc/fluent-bit/fluent-bit.yaml
    owner: root
    group: root
    mode: '0644'
    backup: true
  notify: Restart fluent-bit

- name: Install GeoLite2 City database
  when:
    - (fluentbit_geoip_account_id | default('', true) | string) | length > 0
    - (fluentbit_geoip_license_key | default('', true) | string) | length > 0
  block:
    - name: Create temporary directory for GeoIP download
      ansible.builtin.tempfile:
        state: directory
        prefix: fluentbit-geoip-
      register: __fluentbit_geoip_tmp

    - name: Download GeoLite2 City archive
      ansible.builtin.get_url:
        url: https://download.maxmind.com/geoip/databases/GeoLite2-City/download?suffix=tar.gz
        dest: "{{ __fluentbit_geoip_tmp.path }}/GeoLite2-City.tar.gz"
        mode: '0600'
        force: true
        force_basic_auth: true
        url_username: "{{ fluentbit_geoip_account_id }}"
        url_password: "{{ fluentbit_geoip_license_key }}"
      no_log: true

    - name: Extract GeoLite2 City archive
      ansible.builtin.unarchive:
        src: "{{ __fluentbit_geoip_tmp.path }}/GeoLite2-City.tar.gz"
        dest: "{{ __fluentbit_geoip_tmp.path }}"
        remote_src: true

    - name: Locate GeoLite2 City database file
      ansible.builtin.find:
        paths: "{{ __fluentbit_geoip_tmp.path }}"
        patterns: GeoLite2-City.mmdb
        recurse: true
      register: __fluentbit_geoip_found

    - name: Ensure GeoLite2 City database was extracted
      ansible.builtin.fail:
        msg: GeoLite2-City.mmdb not found in downloaded archive
      when: __fluentbit_geoip_found.files | length == 0

    - name: Install GeoLite2 City database
      ansible.builtin.copy:
        src: "{{ __fluentbit_geoip_found.files[0].path }}"
        dest: /etc/fluent-bit/GeoLite2-City.mmdb
        owner: root
        group: root
        mode: '0644'
        remote_src: true
      notify: Restart fluent-bit
  always:
    - name: Cleanup GeoIP temporary directory
      ansible.builtin.file:
        path: "{{ __fluentbit_geoip_tmp.path }}"
        state: absent
      when:
        - __fluentbit_geoip_tmp is defined
        - __fluentbit_geoip_tmp.path is defined

- name: Remove old-style configurations
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  notify: Restart fluent-bit
  loop:
    - /etc/fluent-bit/fluent-bit.conf
    - /etc/fluent-bit/parsers.conf
    - /etc/fluent-bit/plugins.conf

- name: Start and enable Fluent Bit service
  ansible.builtin.systemd:
    name: fluent-bit
    state: started
    enabled: true
  ignore_errors: "{{ ansible_virtualization_type == 'podman' or ansible_virtualization_type == 'docker' }}"
